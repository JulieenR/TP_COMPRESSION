%===============================================================================
% TP ondelettes
% -------------------------------------------
% Fichier GetFiltres: renvoie les filtres pour un type d'ondelette
%
%% Syntaxe d'appel
% ---------------
%   [rh, rg, g, h] = GetFiltres(type)
%
% Param?tres
% ----------
%   - type  : nature du banc de filtres
%          'Haar'     : Haar
%          'DBn'      : Daubechies
%          '5/3'      : banc biorthogonal 5/3
%          '9/7'      : banc biorthogonal 9/7
%   - rh, rg, g, h  : filtres
%===============================================================================


function [rh, rg, h, g] = GetFiltres(type)

h0 = []; h1 = []; f0 = []; f1 = [];

%-------------------------------------------------------------------------------
% Ondelettes biorthogonales
%-------------------------------------------------------------------------------
if  strcmp(type,'5/3')
        % banc 5/3
        %---------
        h0 = [-1, 2, 6, 2, -1] /8;
        h1 = [-1, 2, -1] /2;
        f0 = [1, 2, 1] /2;
        f1 = [-1, -2, 6, -2, -1] /8;
elseif  strcmp(type,'9/7')
        % banc 9/7
        %---------
        h0 = [+0.02674875741080976, ...
              -0.01686411844287495, ...
              -0.07822326652898785, ...
              +0.2668641184428723,  ...
              +0.6029490182363579,  ...
              +0.2668641184428723,  ...
              -0.07822326652898785, ...
              -0.01686411844287495, ...
              +0.02674875741080976];
        h1 = [+0.09127176311424948, ...
              -0.05754352622849957, ...
              -0.5912717631142470,  ...
              +1.115087052456994,   ...
              -0.5912717631142470,  ...
              -0.05754352622849957, ...
              +0.09127176311424948];
        f0 = [-0.09127176311424948, ...
              -0.05754352622849957, ...
              +0.5912717631142470,  ...
              +1.115087052456994,   ...
              +0.5912717631142470,  ...
              -0.05754352622849957, ...
              -0.09127176311424948];
        f1 = [+0.02674875741080976, ...
              +0.01686411844287495, ...
              -0.07822326652898785, ...
              -0.2668641184428723,  ...
              +0.6029490182363579,  ...
              -0.2668641184428723,  ...
              -0.07822326652898785, ...
              +0.01686411844287495, ...
              +0.02674875741080976];
%-------------------------------------------------------------------------------
% Ondelettes orthogonales
%-------------------------------------------------------------------------------
elseif strcmp(type,'Haar')
        % Haar
        %---------------------------------------------------------------
        f0 = [1  1]/sqrt(2);
        
elseif  strcmp(type,'DB2')
        % Daubechies db2. 
        %-----------------------------------------------------------------
        f0 = [0.48296291314469, 0.83651630373747, 0.22414386804186, -0.12940952255092];
elseif  strcmp(type,'DB3')
        % Daubechies db3. 
        %-----------------------------------------------------------------
        f0 = [	.332670552950	.806891509311	...
				.459877502118	-.135011020010	...
				-.085441273882	.035226291882	];
else
        error('Type des ondelettes incorrect'); 
end;
 
%-------------------------------------------------------------------------------
% On complete les bancs orthogonaux
%-------------------------------------------------------------------------------
if (length(h0) == 0)
    % Filtres h0, h1 et f1
    %---------------------
    L = length(f0);
    n = 0:L-1;
    z= - ones(1,L);
    z = z .^ n;
    h0 = fliplr(f0);
    f1 = h0 .* z;
    h1 = fliplr(f1);
    
    % 0n force les longueurs impaires
    %--------------------------------
    h0 = [h0, 0];
    f0 = [f0, 0];
    h1 = [h1, 0];
    f1 = [f1, 0];
end;

rh = h0;
rg = h1;
h = f0;
g = f1;